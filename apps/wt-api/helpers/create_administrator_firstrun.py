from db import prisma
from prisma.enums import Role
from helpers.password import hash_password, generate_password_salt

async def create_default_admin():
    user = await prisma.account.find_first(where={"permission": Role.ADMINISTRATOR})

    default_password = "wildtag"
    password_salt = generate_password_salt()
    password_hash = hash_password(default_password, password_salt)

    pfp = "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"

    if not user:
        await prisma.account.upsert(where={"username": "administrator"},
                                    data={"create": {"username": "administrator", "passwordHash": password_hash, "passwordSalt": password_salt, "permission": Role.ADMINISTRATOR, "profileImage": pfp},
                                          "update": {"username": "administrator", "passwordHash": password_hash, "passwordSalt": password_salt, "permission": Role.ADMINISTRATOR, "profileImage": pfp}})
        print("====================================================================================================")
        print("====================================================================================================")
        print(f"Created administrator account. You can now log in with username: administrator and password: {default_password}")
        print("====================================================================================================")
        print("====================================================================================================")
    